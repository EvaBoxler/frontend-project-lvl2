"use strict";
exports.__esModule = true;
exports.GroupMethod = exports.TestMethod = exports.TriggerFooterFlag = exports.TriggerHeaderFlags = exports.TriggerFooterMatchIndex = exports.trigger_footer_regex = exports.TriggerHeaderMatchIndex = exports.trigger_header_regex = exports.DocblockOptionValue = exports.DocblockOptionMatchIndex = exports.docblock_option_regex = exports.runtime_indent_spaces = exports.env_root_dir = exports.runtime_namespace = exports.config_namespace = exports.package_remap_bin = exports.package_homepage = exports.package_name = void 0;
var package_json = require('../package.json');
exports.package_name = package_json.name;
exports.package_homepage = package_json.homepage;
exports.package_remap_bin = Object.keys(package_json.bin)[0];
exports.config_namespace = '_dts_jest_';
exports.runtime_namespace = '_dts_jest_runtime_';
exports.env_root_dir = 'DTS_JEST_ROOT_DIR';
exports.runtime_indent_spaces = 2;
exports.docblock_option_regex = /@dts-jest((?: +[^:]+:[^ ]+)+)/;
var DocblockOptionMatchIndex;
(function (DocblockOptionMatchIndex) {
    DocblockOptionMatchIndex[DocblockOptionMatchIndex["Input"] = 0] = "Input";
    DocblockOptionMatchIndex[DocblockOptionMatchIndex["Options"] = 1] = "Options";
})(DocblockOptionMatchIndex = exports.DocblockOptionMatchIndex || (exports.DocblockOptionMatchIndex = {}));
var DocblockOptionValue;
(function (DocblockOptionValue) {
    DocblockOptionValue["EnableTestType"] = "enable:test-type";
    DocblockOptionValue["EnableTestValue"] = "enable:test-value";
    DocblockOptionValue["DisableTestType"] = "disable:test-type";
    DocblockOptionValue["DisableTestValue"] = "disable:test-value";
})(DocblockOptionValue = exports.DocblockOptionValue || (exports.DocblockOptionValue = {}));
exports.trigger_header_regex = /^\s*@dts-jest\b(:?\S*)\s*(.*)\s*$/;
var TriggerHeaderMatchIndex;
(function (TriggerHeaderMatchIndex) {
    TriggerHeaderMatchIndex[TriggerHeaderMatchIndex["Input"] = 0] = "Input";
    TriggerHeaderMatchIndex[TriggerHeaderMatchIndex["Flags"] = 1] = "Flags";
    TriggerHeaderMatchIndex[TriggerHeaderMatchIndex["Description"] = 2] = "Description";
})(TriggerHeaderMatchIndex = exports.TriggerHeaderMatchIndex || (exports.TriggerHeaderMatchIndex = {}));
exports.trigger_footer_regex = /^=>\s*([\s\S]*)\s*$/;
var TriggerFooterMatchIndex;
(function (TriggerFooterMatchIndex) {
    TriggerFooterMatchIndex[TriggerFooterMatchIndex["Input"] = 0] = "Input";
    TriggerFooterMatchIndex[TriggerFooterMatchIndex["Value"] = 1] = "Value";
})(TriggerFooterMatchIndex = exports.TriggerFooterMatchIndex || (exports.TriggerFooterMatchIndex = {}));
var TriggerHeaderFlags;
(function (TriggerHeaderFlags) {
    TriggerHeaderFlags[TriggerHeaderFlags[":snap"] = 1] = ":snap";
    TriggerHeaderFlags[TriggerHeaderFlags[":show"] = 2] = ":show";
    TriggerHeaderFlags[TriggerHeaderFlags[":pass"] = 4] = ":pass";
    TriggerHeaderFlags[TriggerHeaderFlags[":fail"] = 8] = ":fail";
    TriggerHeaderFlags[TriggerHeaderFlags[":only"] = 16] = ":only";
    TriggerHeaderFlags[TriggerHeaderFlags[":skip"] = 32] = ":skip";
    TriggerHeaderFlags[TriggerHeaderFlags[":group"] = 64] = ":group";
    TriggerHeaderFlags[TriggerHeaderFlags[":not-any"] = 128] = ":not-any";
    TriggerHeaderFlags[TriggerHeaderFlags["Assertion"] = 143] = "Assertion";
})(TriggerHeaderFlags = exports.TriggerHeaderFlags || (exports.TriggerHeaderFlags = {}));
var TriggerFooterFlag;
(function (TriggerFooterFlag) {
    TriggerFooterFlag["Show"] = "?";
    TriggerFooterFlag["Error"] = ":error";
    TriggerFooterFlag["NoError"] = ":no-error";
})(TriggerFooterFlag = exports.TriggerFooterFlag || (exports.TriggerFooterFlag = {}));
var TestMethod;
(function (TestMethod) {
    TestMethod["Test"] = "test";
    TestMethod["Only"] = "test.only";
    TestMethod["Skip"] = "test.skip";
})(TestMethod = exports.TestMethod || (exports.TestMethod = {}));
var GroupMethod;
(function (GroupMethod) {
    GroupMethod["Test"] = "describe";
    GroupMethod["Only"] = "describe.only";
    GroupMethod["Skip"] = "describe.skip";
})(GroupMethod = exports.GroupMethod || (exports.GroupMethod = {}));
