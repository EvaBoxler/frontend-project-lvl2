"use strict";
exports.__esModule = true;
exports.normalize_expected_value = void 0;
var tslib_1 = require("tslib");
var create_message_1 = require("./create-message");
var create_source_file_1 = require("./create-source-file");
var get_diagnostic_message_1 = require("./get-diagnostic-message");
var get_display_line_1 = require("./get-display-line");
var get_node_one_line_text_1 = require("./get-node-one-line-text");
var normalize_expected_value = function (value, filename, line, ts) {
    var source_file = (0, create_source_file_1.create_source_file)(filename, "var x = ".concat(value), ts);
    // istanbul ignore next
    var _a = source_file.parseDiagnostics, errors = _a === void 0 ? [] : _a;
    if (errors.length !== 0) {
        var position_information = "(".concat(filename, ":").concat((0, get_display_line_1.get_display_line)(line), ")");
        throw new Error((0, create_message_1.create_message)("Unexpected error(s) while parsing expected value:", tslib_1.__spreadArray([
            position_information,
            ''
        ], errors.map(get_diagnostic_message_1.get_diagnostic_message), true)));
    }
    var expression = source_file.statements[0]
        .declarationList.declarations[0].initializer;
    return (0, get_node_one_line_text_1.get_node_one_line_text)(expression, source_file, ts);
};
exports.normalize_expected_value = normalize_expected_value;
